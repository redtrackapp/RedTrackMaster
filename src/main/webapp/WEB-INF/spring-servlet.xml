<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"	
	xmlns:task="http://www.springframework.org/schema/task" 
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		 http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd">

 
	<!-- Scan for all of Spring components such as Spring Service -->
	<context:component-scan base-package="com.dbs.redtrack.*"></context:component-scan>	
	<context:annotation-config />
	 
	
	<!-- Enables the Spring MVC @Controller programming model 
	<annotation-driven />-->
				  
	<!-- enable Spring AOP support with auto proxy at runtime -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

<!-- Necessary to get the entity manager injected into the factory bean -->
	<beans:bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />	
	
	<!-- Define EclipseLink JPA Vendor Adapter -->
	<beans:bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
		<beans:property name="databasePlatform"
			value="org.eclipse.persistence.platform.database.MySQLPlatform" />
		<beans:property name="generateDdl" value="false" />
		<beans:property name="showSql" value="true" />
	</beans:bean>
	 
	<!-- Entity Manager Factory -->
	<beans:bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
		<beans:property name="persistenceUnitName" value="jpa-persistence" />
		<beans:property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
	</beans:bean>
	
	<!-- Transaction Manager -->
	<beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<beans:property name="entityManagerFactory" ref="entityManagerFactory" />
	</beans:bean>

	<!-- Detect @Transactional --> 
	<tx:annotation-driven transaction-manager="transactionManager" />
	  
	<!-- Configure to plugin JSON as request and response in method handler --> 
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</beans:bean>	
	<!--
	  <beans:bean id="userTempBatch" class=" com.dbs.redtrack.web.utilities.UserTempBatch"/>
	  -->
	 <!-- import ehcache settings
	<beans:import resource="redtrack-ehcache.xml"/>
		  
     <beans:bean id="redtrackProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
         <beans:property name="location" value="classpath:/properties/RedTrackConfig.properties" />      
     </beans:bean> 
     	  --> 
	<task:scheduler id="searchScheduler" pool-size="1"/>
    <task:executor id="searchExecutor" pool-size="1"/>
    <task:annotation-driven executor="searchExecutor"  scheduler="searchScheduler"/>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory
	<mvc:resources mapping="/resources/**" location="/resources/theme1/"	cache-period="31556926"/>-->    
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory--> 
	<resources mapping="/resources/**" location="/resources/" />	
    <mvc:annotation-driven />
    
    
    	<!-- below tags is view jsp -->	
	<beans:bean class="org.springframework.web.servlet.view.XmlViewResolver">
	   <beans:property name="location">
	       <beans:value>/WEB-INF/redtrack-views.xml</beans:value>
	   </beans:property>
	</beans:bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/jsp/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>	    
	 
</beans:beans>
